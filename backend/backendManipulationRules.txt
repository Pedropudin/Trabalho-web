Backend Manipulation Rules (API Usage Guide)
============================================

1. Authentication and JWT Usage
-------------------------------
- Most protected endpoints (such as creating, updating, or deleting admins/products) require authentication via JWT (JSON Web Token).
- You must obtain a valid JWT by logging in as an admin or user via the appropriate login endpoint (e.g., POST /api/auth/admin-login).
- The JWT is returned in the response as a "token" field.

2. Sending the JWT in Requests
------------------------------
- For all protected endpoints, include the JWT in the HTTP request header:
  Authorization: Bearer <your_jwt_token>
- Example (Insomnia/cURL):
  Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...

3. JWT Expiration
-----------------
- JWT tokens are temporary and expire after a set period (e.g., 2 hours).
- After expiration, you must log in again to obtain a new token.
- Do not hardcode or reuse expired tokens.

4. Creating Resources (POST)
----------------------------
- To create a new user: POST /api/users (no authentication required)
- To create a new admin: POST /api/users/create-admin (requires admin JWT in header)

5. Updating Resources (PATCH/PUT)
---------------------------------
- To update a user: PATCH /api/users/:id (no authentication required by default)
- To update an admin: PATCH /api/users/admin/:id (requires admin JWT in header)
- Only send the fields you want to update in the request body.

6. Deleting Resources (DELETE)
------------------------------
- To delete a user: DELETE /api/users/:id
- To delete an admin: DELETE /api/users/admin/:id (requires admin JWT in header)

7. Example cURL Request with JWT
-------------------------------
curl -X PATCH http://localhost:5000/api/users/admin/ADMIN_ID \
  -H "Authorization: Bearer <your_jwt_token>" \
  -H "Content-Type: application/json" \
  -d '{"name":"New Name"}'

8. General Notes
----------------
- Always check the API response for errors (e.g., "Access denied", "Token inv√°lido", "Expired token").
- Never share your JWT with others.
- If you receive a 401 Unauthorized error, your token may be missing, invalid, or expired.
- For security, always use HTTPS in production environments.

===========================================================
API URL Reference by Context
===========================================================

[AUTH]
-------
POST   /api/auth/login           - User login
POST   /api/auth/register        - User registration
POST   /api/auth/admin-login     - Admin login

[USERS]
--------
POST   /api/users                - Create user
GET    /api/users                - List all users
GET    /api/users/:id            - Get user by id
PATCH  /api/users/:id            - Update user (partial)
DELETE /api/users/:id            - Delete user

POST   /api/users/:id/messages   - Add message to user

[ADMINS]
---------
POST   /api/users/create-admin   - Create admin (requires admin JWT)
PATCH  /api/users/admin/:id      - Update admin (requires admin JWT)
DELETE /api/users/admin/:id      - Delete admin (requires admin JWT)

[PRODUCTS]
-----------
GET    /api/products                     - List all products
POST   /api/products                     - Create product (admin only)
PUT    /api/products/:id                 - Update product by numeric id (admin only)
PUT    /api/products/:id                 - Update product by numeric id (unprotected, legacy)
DELETE /api/products/:id                 - Delete product (admin only)
GET    /api/products/export              - Export all products (admin only)
POST   /api/products/import-json         - Import products from JSON file (admin only)
POST   /api/products/import              - Import products via request body (admin only)

[ORDERS]
---------
GET    /api/orders                       - List all orders
POST   /api/orders/finish                - Create new order (checkout)

===========================================================